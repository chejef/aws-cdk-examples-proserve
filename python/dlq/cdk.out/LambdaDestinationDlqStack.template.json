{
  "Resources": {
    "topic69831491": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "topic",
        "TopicName": "lambda_topic"
      },
      "Metadata": {
        "aws:cdk:path": "LambdaDestinationDlqStack/topic/Resource"
      }
    },
    "lambdaonsuccessdestination8ACC02E2": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "MessageRetentionPeriod": 3600,
        "VisibilityTimeout": 20
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "LambdaDestinationDlqStack/lambda-on-success_destination/Resource"
      }
    },
    "lambdaonfailuredestinationE2A1BD14": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "MessageRetentionPeriod": 3600,
        "VisibilityTimeout": 20
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "LambdaDestinationDlqStack/lambda-on-failure-destination/Resource"
      }
    },
    "lambdaServiceRole494E4CA6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LambdaDestinationDlqStack/lambda/ServiceRole/Resource"
      }
    },
    "lambdaServiceRoleDefaultPolicyBF6FA5E7": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "lambdaDeadLetterQueue3ED8554D",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "lambdaonfailuredestinationE2A1BD14",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "lambdaonsuccessdestination8ACC02E2",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "lambdaServiceRoleDefaultPolicyBF6FA5E7",
        "Roles": [
          {
            "Ref": "lambdaServiceRole494E4CA6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LambdaDestinationDlqStack/lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "lambdaDeadLetterQueue3ED8554D": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "MessageRetentionPeriod": 1209600
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "LambdaDestinationDlqStack/lambda/DeadLetterQueue/Resource"
      }
    },
    "lambda8B5974B5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "4c0307d9a17eb324b286579f877cf37f7b1b42fbda65bfba7a5ee7676c370a7b.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "lambdaServiceRole494E4CA6",
            "Arn"
          ]
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "lambdaDeadLetterQueue3ED8554D",
              "Arn"
            ]
          }
        },
        "FunctionName": "dlq_lambda",
        "Handler": "lambda.handler",
        "Runtime": "python3.9",
        "Timeout": 15
      },
      "DependsOn": [
        "lambdaServiceRoleDefaultPolicyBF6FA5E7",
        "lambdaServiceRole494E4CA6"
      ],
      "Metadata": {
        "aws:cdk:path": "LambdaDestinationDlqStack/lambda/Resource",
        "aws:asset:path": "asset.4c0307d9a17eb324b286579f877cf37f7b1b42fbda65bfba7a5ee7676c370a7b",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "lambdaEventInvokeConfig7D6FEDBE": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "lambda8B5974B5"
        },
        "Qualifier": "$LATEST",
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "lambdaonfailuredestinationE2A1BD14",
                "Arn"
              ]
            }
          },
          "OnSuccess": {
            "Destination": {
              "Fn::GetAtt": [
                "lambdaonsuccessdestination8ACC02E2",
                "Arn"
              ]
            }
          }
        },
        "MaximumRetryAttempts": 2
      },
      "Metadata": {
        "aws:cdk:path": "LambdaDestinationDlqStack/lambda/EventInvokeConfig/Resource"
      }
    },
    "lambdaAllowInvokeLambdaDestinationDlqStacktopicE229C73C3D1788F8": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "lambda8B5974B5",
            "Arn"
          ]
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "topic69831491"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaDestinationDlqStack/lambda/AllowInvoke:LambdaDestinationDlqStacktopicE229C73C"
      }
    },
    "lambdatopic45219F42": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "topic69831491"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "lambda8B5974B5",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaDestinationDlqStack/lambda/topic/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/21Qy27CQAz8lt4Tl5YL14JA4pYG7mizMWCSeCHeBaEV/87GEVUPnGY8foztb5jB5MPcJLd1k7dUQdx4Y5ssSbsoLBC37kw2W+x5JJtQie3p7MnxoP6PH5lcUsdvwIBDTskja01X1QbiKrB9tf3x5RXZr/nqGlw43tNhyL4VC+w7ElEfMh3E0rVqo1i4luxd65SlXaY7I4Je4GeAFMM82Ab93EjaSsV07IFYx5coLvRWJybTmsaLirs/Ov6cwtckfeokRHkf2FOHUI74BB20tlhEAQAA"
      },
      "Metadata": {
        "aws:cdk:path": "LambdaDestinationDlqStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}